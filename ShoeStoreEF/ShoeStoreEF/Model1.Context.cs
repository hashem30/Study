//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShoeStoreEF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShoeStore2Entities2 : DbContext
    {
        public ShoeStore2Entities2()
            : base("name=ShoeStore2Entities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Administrator> Administrators { get; set; }
        public virtual DbSet<AdminRole> AdminRoles { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<MailSetting> MailSettings { get; set; }
        public virtual DbSet<MenuCategory> MenuCategories { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<PageBinding> PageBindings { get; set; }
        public virtual DbSet<PermissionCategory> PermissionCategories { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SalesOrderItem> SalesOrderItems { get; set; }
        public virtual DbSet<SalesOrder> SalesOrders { get; set; }
        public virtual DbSet<SalesOrderStatu> SalesOrderStatus { get; set; }
        public virtual DbSet<TopMenu> TopMenus { get; set; }
        public virtual DbSet<View_AdminRole> View_AdminRole { get; set; }
        public virtual DbSet<View_Menu> View_Menu { get; set; }
        public virtual DbSet<View_PageBinding> View_PageBinding { get; set; }
        public virtual DbSet<View_Permission> View_Permission { get; set; }
        public virtual DbSet<View_Product> View_Product { get; set; }
        public virtual DbSet<View_SalesOrder> View_SalesOrder { get; set; }
    
        public virtual int sp_SequenceMove(string tbl, string primarykey, Nullable<int> id, Nullable<int> sequence, string direction)
        {
            var tblParameter = tbl != null ?
                new ObjectParameter("tbl", tbl) :
                new ObjectParameter("tbl", typeof(string));
    
            var primarykeyParameter = primarykey != null ?
                new ObjectParameter("primarykey", primarykey) :
                new ObjectParameter("primarykey", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var sequenceParameter = sequence.HasValue ?
                new ObjectParameter("sequence", sequence) :
                new ObjectParameter("sequence", typeof(int));
    
            var directionParameter = direction != null ?
                new ObjectParameter("direction", direction) :
                new ObjectParameter("direction", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SequenceMove", tblParameter, primarykeyParameter, idParameter, sequenceParameter, directionParameter);
        }
    }
}
